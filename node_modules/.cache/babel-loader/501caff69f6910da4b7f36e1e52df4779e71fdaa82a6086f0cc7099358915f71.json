{"ast":null,"code":"var _jsxFileName = \"D:\\\\myapp\\\\src\\\\App.js\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport React, { Component } from 'react';\n//import Firstpage from './Firstpage';\n//import Lifecycle from './Lifecycle';\n\n/*\r\n* Lifecycle of component\r\n* 1.Mouting =>{\r\n*      1.constructor()\r\n*      2.getDerivedStateFromProps(props,state)\r\n*      3.render()\r\n*      4.componentDidMount()\r\n*    }\r\n* 2.Updating =>{\r\n*      1.getDerivedStateFromProps()\r\n*      2.shouldComponentUpdate()\r\n*      3.render()\r\n*      4.getSnapshotBeforeUpdate(prevProps,prevState)\r\n*      5.componentDidUpdate()\r\n*  \r\n*    }\r\n* 3.unMounting =>{\r\n*      1.componentWillUnmount()\r\n*    }\r\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.clickHandler = () => {\n      this.setState({\n        count: this.state.count + 1,\n        fav: 'red'\n      });\n    };\n    this.state = {\n      count: 0,\n      fav: 'blue'\n    };\n    console.log(\"App in Constructor:\" + this.state.fav);\n  }\n\n  // By default it always returns true.It checks whether the state should be change or not:)\n  shouldComponentUpdate() {\n    if (this.state.fav === 'red' && this.state.count <= 0) return false;else return true;\n  }\n  componentDidUpdate() {\n    console.log(\"\");\n    alert(\"after fav is updated:\" + this.state.fav);\n  }\n  static getDerivedStateFromProps(props, state) {\n    console.log(\"in getDerivedStateFromProps\");\n    return null;\n  }\n  render() {\n    console.log(\"App in render\");\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container d-flex flex-row justify-content-between text-center mt-5\",\n      id: \"myid\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"text-primary\",\n          children: [\"App! -\", this.state.fav]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: this.clickHandler,\n          children: this.state.count\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this);\n  }\n  componentDidMount() {\n    console.log(\"App in componentDidMount\");\n    let ele = document.getElementById(\"myid\"); // child component(Lifecycle.js) id\n    ele.classList.add(\"border\");\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","App","constructor","props","clickHandler","setState","count","state","fav","console","log","shouldComponentUpdate","componentDidUpdate","alert","getDerivedStateFromProps","render","className","id","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","componentDidMount","ele","document","getElementById","classList","add"],"sources":["D:/myapp/src/App.js"],"sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\r\nimport React, { Component } from 'react'\r\n//import Firstpage from './Firstpage';\r\n//import Lifecycle from './Lifecycle';\r\n\r\n /*\r\n * Lifecycle of component\r\n * 1.Mouting =>{\r\n *      1.constructor()\r\n *      2.getDerivedStateFromProps(props,state)\r\n *      3.render()\r\n *      4.componentDidMount()\r\n *    }\r\n * 2.Updating =>{\r\n *      1.getDerivedStateFromProps()\r\n *      2.shouldComponentUpdate()\r\n *      3.render()\r\n *      4.getSnapshotBeforeUpdate(prevProps,prevState)\r\n *      5.componentDidUpdate()\r\n *  \r\n *    }\r\n * 3.unMounting =>{\r\n *      1.componentWillUnmount()\r\n *    }\r\n */\r\n\r\nclass App extends Component {\r\n  constructor(props)\r\n  {\r\n    super(props)\r\n    this.state={\r\n      count:0,\r\n      fav:'blue'\r\n    }\r\n    console.log(\"App in Constructor:\"+this.state.fav);\r\n  }\r\n\r\n  // By default it always returns true.It checks whether the state should be change or not:)\r\n  shouldComponentUpdate()\r\n  {\r\n    if(this.state.fav==='red' && this.state.count<=0)\r\n      return false;\r\n    else\r\n      return true;\r\n  }\r\n\r\n\r\n  componentDidUpdate() {\r\n    console.log(\"\")\r\n    alert(\"after fav is updated:\"+this.state.fav);\r\n  }\r\n\r\n  clickHandler=()=>{\r\n    this.setState({\r\n      count:this.state.count+1,\r\n      fav:'red'\r\n    })\r\n  }\r\n  \r\n  static getDerivedStateFromProps(props,state){\r\n    console.log(\"in getDerivedStateFromProps\");\r\n    return null\r\n  }\r\n  render() {\r\n    console.log(\"App in render\");\r\n    return (\r\n      <div className='container d-flex flex-row justify-content-between text-center mt-5' id=\"myid\">\r\n        <div>\r\n          <h4 className='text-primary'>App! -{this.state.fav}</h4>\r\n          <button className='btn btn-primary' onClick={this.clickHandler}>{this.state.count}</button>\r\n        </div>\r\n        {/*<Firstpage count={this.state.count}/>*/}\r\n        {/*<Lifecycle/>*/}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  componentDidMount(){\r\n    console.log(\"App in componentDidMount\");\r\n    let ele=document.getElementById(\"myid\") // child component(Lifecycle.js) id\r\n    ele.classList.add(\"border\")\r\n  }\r\n}\r\n\r\nexport default App;"],"mappings":";AAAA,OAAO,sCAAsC;AAC7C,OAAO,wCAAwC;AAC/C,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC;AACA;;AAEC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnBC,SAAAC,MAAA,IAAAC,OAAA;AAqBD,MAAMC,GAAG,SAASH,SAAS,CAAC;EAC1BI,WAAWA,CAACC,KAAK,EACjB;IACE,KAAK,CAACA,KAAK,CAAC;IAAA,KAuBdC,YAAY,GAAC,MAAI;MACf,IAAI,CAACC,QAAQ,CAAC;QACZC,KAAK,EAAC,IAAI,CAACC,KAAK,CAACD,KAAK,GAAC,CAAC;QACxBE,GAAG,EAAC;MACN,CAAC,CAAC;IACJ,CAAC;IA3BC,IAAI,CAACD,KAAK,GAAC;MACTD,KAAK,EAAC,CAAC;MACPE,GAAG,EAAC;IACN,CAAC;IACDC,OAAO,CAACC,GAAG,CAAC,qBAAqB,GAAC,IAAI,CAACH,KAAK,CAACC,GAAG,CAAC;EACnD;;EAEA;EACAG,qBAAqBA,CAAA,EACrB;IACE,IAAG,IAAI,CAACJ,KAAK,CAACC,GAAG,KAAG,KAAK,IAAI,IAAI,CAACD,KAAK,CAACD,KAAK,IAAE,CAAC,EAC9C,OAAO,KAAK,CAAC,KAEb,OAAO,IAAI;EACf;EAGAM,kBAAkBA,CAAA,EAAG;IACnBH,OAAO,CAACC,GAAG,CAAC,EAAE,CAAC;IACfG,KAAK,CAAC,uBAAuB,GAAC,IAAI,CAACN,KAAK,CAACC,GAAG,CAAC;EAC/C;EASA,OAAOM,wBAAwBA,CAACX,KAAK,EAACI,KAAK,EAAC;IAC1CE,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;IAC1C,OAAO,IAAI;EACb;EACAK,MAAMA,CAAA,EAAG;IACPN,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;IAC5B,oBACEV,OAAA;MAAKgB,SAAS,EAAC,oEAAoE;MAACC,EAAE,EAAC,MAAM;MAAAC,QAAA,eAC3FlB,OAAA;QAAAkB,QAAA,gBACElB,OAAA;UAAIgB,SAAS,EAAC,cAAc;UAAAE,QAAA,GAAC,QAAM,EAAC,IAAI,CAACX,KAAK,CAACC,GAAG;QAAA;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACxDtB,OAAA;UAAQgB,SAAS,EAAC,iBAAiB;UAACO,OAAO,EAAE,IAAI,CAACnB,YAAa;UAAAc,QAAA,EAAE,IAAI,CAACX,KAAK,CAACD;QAAK;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGH,CAAC;EAEV;EAEAE,iBAAiBA,CAAA,EAAE;IACjBf,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;IACvC,IAAIe,GAAG,GAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,EAAC;IACxCF,GAAG,CAACG,SAAS,CAACC,GAAG,CAAC,QAAQ,CAAC;EAC7B;AACF;AAEA,eAAe5B,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}