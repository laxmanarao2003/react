{"ast":null,"code":"var _jsxFileName = \"D:\\\\myapp\\\\src\\\\App.js\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport React, { Component } from 'react';\n\n/**\r\n * sort the list elements\r\n * Rest api's\r\n * search the list of elements\r\n * await,synchronous,promises \r\n * https://www.geeksforgeeks.org/7-javascript-concepts-that-every-developer-must-know/\r\n*/\n\n/*\r\n* Lifecycle of component\r\n* 1.Mounting =>{\r\n*      1.constructor()\r\n*      2.getDerivedStateFromProps(props,state)\r\n*      3.render()\r\n*      4.componentDidMount()\r\n*    }\r\n* 2.Updating =>{\r\n*      1.getDerivedStateFromProps()\r\n*      2.shouldComponentUpdate()\r\n*      3.render()\r\n*      4.getSnapshotBeforeUpdate(prevProps,prevState)\r\n*      5.componentDidUpdate()\r\n*  \r\n*    }\r\n* 3.unMounting =>{\r\n*      1.componentWillUnmount()\r\n*    }\r\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.clickHandler = () => {\n      this.setState({\n        count: this.state.count + 1,\n        fav: 'red'\n      });\n    };\n    // it accepts two paramters i.e we will allow to access the prevState and prevProps when it gets updated:)\n    this.getSnapshotBeforeUpdate = (prevProps, prevState) => {\n      console.log(prevState.fav);\n      return null;\n    };\n    this.state = {\n      count: 0,\n      fav: 'blue'\n    };\n    console.log(\"App in Constructor:\" + this.state.fav);\n  }\n\n  // By default it always returns true.It checks whether the state changed or not:)\n  shouldComponentUpdate() {\n    if (this.state.fav === 'blue' || this.state.count <= 0) return true;else return false;\n  }\n\n  // it is Executed after the state or component gets updated:)\n  componentDidUpdate() {\n    console.log(\"cdu\");\n    alert(\"after fav is updated:\" + this.state.fav);\n  }\n  static getDerivedStateFromProps(props, state) {\n    console.log(\"in getDerivedStateFromProps\");\n    return null;\n  }\n  render() {\n    console.log(\"App in render\");\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container d-flex flex-row justify-content-between text-center mt-5\",\n      id: \"myid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"text-primary\",\n          children: [\"App! -\", this.state.fav]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: this.clickHandler,\n          children: this.state.count\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(Firstpage, {\n        count: this.state.count\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(Lifecycle, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 3\n    }, this);\n  }\n  componentDidMount() {\n    console.log(\"App in componentDidMount\");\n    let ele = document.getElementById(\"myid\"); // child component(Lifecycle.js) id\n    ele.classList.add(\"border\");\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","App","constructor","props","clickHandler","setState","count","state","fav","getSnapshotBeforeUpdate","prevProps","prevState","console","log","shouldComponentUpdate","componentDidUpdate","alert","getDerivedStateFromProps","render","className","id","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","Firstpage","Lifecycle","componentDidMount","ele","document","getElementById","classList","add"],"sources":["D:/myapp/src/App.js"],"sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\r\nimport React, { Component } from 'react'\r\n\r\n\r\n/**\r\n * sort the list elements\r\n * Rest api's\r\n * search the list of elements\r\n * await,synchronous,promises \r\n * https://www.geeksforgeeks.org/7-javascript-concepts-that-every-developer-must-know/\r\n*/\r\n\r\n /*\r\n * Lifecycle of component\r\n * 1.Mounting =>{\r\n *      1.constructor()\r\n *      2.getDerivedStateFromProps(props,state)\r\n *      3.render()\r\n *      4.componentDidMount()\r\n *    }\r\n * 2.Updating =>{\r\n *      1.getDerivedStateFromProps()\r\n *      2.shouldComponentUpdate()\r\n *      3.render()\r\n *      4.getSnapshotBeforeUpdate(prevProps,prevState)\r\n *      5.componentDidUpdate()\r\n *  \r\n *    }\r\n * 3.unMounting =>{\r\n *      1.componentWillUnmount()\r\n *    }\r\n */\r\n\r\nclass App extends Component {\r\n  \tconstructor(props)\r\n  \t{\r\n\t\tsuper(props)\r\n\t\tthis.state={\r\n\t\t\tcount:0,\r\n\t\t\tfav:'blue'\r\n\t\t}\r\n\t\tconsole.log(\"App in Constructor:\"+this.state.fav);\r\n  \t}\r\n\r\n  \t// By default it always returns true.It checks whether the state changed or not:)\r\n\tshouldComponentUpdate()\r\n\t{\r\n\t\tif(this.state.fav==='blue' || this.state.count<=0)\r\n\t\t\treturn true;\r\n\t\telse\r\n\t\t\treturn false;\r\n\t}\r\n\r\n\t// it is Executed after the state or component gets updated:)\r\n\tcomponentDidUpdate() {\r\n\t\tconsole.log(\"cdu\");\r\n\t\talert(\"after fav is updated:\"+this.state.fav);\r\n\t}\r\n\r\n\tclickHandler=()=>{\r\n\t\tthis.setState({\r\n\t\t\tcount:this.state.count+1,\r\n\t\t\tfav:'red'\r\n\t\t})\r\n  \t}\r\n  \r\n\tstatic getDerivedStateFromProps(props,state){\r\n\t\tconsole.log(\"in getDerivedStateFromProps\");\r\n\t\treturn null;\r\n\t}\r\n\r\n  \t// it accepts two paramters i.e we will allow to access the prevState and prevProps when it gets updated:)\r\n\tgetSnapshotBeforeUpdate = (prevProps, prevState) => {\r\n\t\tconsole.log(prevState.fav);\r\n\t\treturn null;\r\n\t}\r\n\r\n\trender() {\r\n\t\tconsole.log(\"App in render\");\r\n\t\treturn (\r\n\t\t<div className='container d-flex flex-row justify-content-between text-center mt-5' id=\"myid\">\r\n\t\t\t<div>\r\n\t\t\t\t<h4 className='text-primary'>App! -{this.state.fav}</h4>\r\n\t\t\t\t<button className='btn btn-primary' onClick={this.clickHandler}>{this.state.count}</button>\r\n\t\t\t</div>\r\n\t\t\t<Firstpage count={this.state.count}/>\r\n\t\t\t<Lifecycle/>\r\n\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\tconsole.log(\"App in componentDidMount\");\r\n\t\tlet ele=document.getElementById(\"myid\") // child component(Lifecycle.js) id\r\n\t\tele.classList.add(\"border\")\r\n\t}\r\n}\r\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}