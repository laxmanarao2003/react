{"ast":null,"code":"import _regeneratorRuntime from\"D:/ReactPractise/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"D:/ReactPractise/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"D:/ReactPractise/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';/**\r\n * Promises accepts 2 parameters Resolve & reject\r\n * \r\n * 1.pending -> when the promise object is pending the result is undefined \r\n * 2.fulfilled -> when the promise object is fulfilledthe result is value\r\n * 3.rejected -> when the promise object is rejected the result is an error\r\n * \r\n */import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function PromisesFunc(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),subscribed=_useState2[0],setSubscribed=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),watched=_useState4[0],setWatched=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),liked=_useState6[0],setLiked=_useState6[1];var start=function start(){// general promise method :)\n// const subscribe=new Promise((resolve,reject)=>{\n//     if(subscribed)\n//         resolve(\"user subscribed\")\n//     else\n//         reject(\"user not subscribed\")\n// })\n// subscribe.then((result)=>{\n//     console.log(result)\n// }).catch((err)=>console.log(err))\nvar subscriber1=new Promise(function(resolve,reject){if(subscribed){resolve({userId:701,name:'Bharat',desc:'Bharat subscribed'});}else if(watched){resolve({userId:701,name:'Bharat',desc:'Bharat watched successfully'});}else if(liked){resolve({userId:701,name:'Bharat',desc:'Bharat liked successfully'});}else reject(\"user not subscribed,watched and liked\");});var subscriber2=new Promise(function(resolve,reject){if(subscribed){resolve({userId:704,name:'Mahesh',desc:'Mahesh subscribed'});}else if(watched){resolve({userId:704,name:'Mahesh',desc:'Mahesh watched successfully'});}else if(liked){resolve({userId:704,name:'Mahesh',desc:'Mahesh liked successfully'});}else reject(\"user not subscribed,watched and liked\");});Promise.all([subscriber1,subscriber2]).then(function(result){console.log(result);}).catch(function(err){return console.log(err);});};var subscribers=function subscribers(){return new Promise(function(resolve,reject){if(!subscribed){resolve({name:'Rohit',desc:'Rohit Not subscribed'});}else reject(\"user subscribed\");});};// Async makes a function to return a promise :)\nvar asyncFunc=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var result;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:console.log(\"First statement\");// Await makes a function to wait for a promise :)\n_context.next=3;return subscribers();case 3:result=_context.sent;console.log(result);console.log(\"Third statement\");case 6:case\"end\":return _context.stop();}},_callee);}));return function asyncFunc(){return _ref.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[\"PromisesFunc\",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary my-4\",onClick:function onClick(){return start();},children:\"Subscribe\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary\",onClick:function onClick(){return asyncFunc();},children:\"asyncFunc\"})]});}export default PromisesFunc;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","PromisesFunc","_useState","_useState2","_slicedToArray","subscribed","setSubscribed","_useState3","_useState4","watched","setWatched","_useState5","_useState6","liked","setLiked","start","subscriber1","Promise","resolve","reject","userId","name","desc","subscriber2","all","then","result","console","log","catch","err","subscribers","asyncFunc","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","sent","stop","apply","arguments","className","children","onClick"],"sources":["D:/ReactPractise/src/Practise_things/PromisesFunc.js"],"sourcesContent":["import React, { useState } from 'react'\r\n\r\n/**\r\n * Promises accepts 2 parameters Resolve & reject\r\n * \r\n * 1.pending -> when the promise object is pending the result is undefined \r\n * 2.fulfilled -> when the promise object is fulfilledthe result is value\r\n * 3.rejected -> when the promise object is rejected the result is an error\r\n * \r\n */\r\n\r\nfunction PromisesFunc() {\r\n\r\n    const [subscribed,setSubscribed]=useState(false)\r\n    const [watched,setWatched]=useState(true)\r\n    const [liked,setLiked]=useState(false)\r\n\r\n    const start=()=>{\r\n\r\n        // general promise method :)\r\n        // const subscribe=new Promise((resolve,reject)=>{\r\n        //     if(subscribed)\r\n        //         resolve(\"user subscribed\")\r\n        //     else\r\n        //         reject(\"user not subscribed\")\r\n        // })\r\n        // subscribe.then((result)=>{\r\n        //     console.log(result)\r\n        // }).catch((err)=>console.log(err))\r\n\r\n        const subscriber1=new Promise((resolve,reject)=>{\r\n            if(subscribed)\r\n            {\r\n                resolve({\r\n                    userId:701,\r\n                    name:'Bharat',\r\n                    desc:'Bharat subscribed'\r\n                })\r\n            }\r\n            else if(watched)\r\n            {\r\n                resolve({\r\n                    userId:701,\r\n                    name:'Bharat',\r\n                    desc:'Bharat watched successfully'\r\n                })\r\n            }\r\n            else if(liked)\r\n            {\r\n                resolve({\r\n                    userId:701,\r\n                    name:'Bharat',\r\n                    desc:'Bharat liked successfully'\r\n                })\r\n            }\r\n            else\r\n                reject(\"user not subscribed,watched and liked\")\r\n        })\r\n\r\n        const subscriber2=new Promise((resolve, reject)=>{\r\n            if(subscribed)\r\n            {\r\n                resolve({\r\n                    userId:704,\r\n                    name:'Mahesh',\r\n                    desc:'Mahesh subscribed'\r\n                })\r\n            }\r\n            else if(watched)\r\n            {\r\n                resolve({\r\n                    userId:704,\r\n                    name:'Mahesh',\r\n                    desc:'Mahesh watched successfully'\r\n                })\r\n            }\r\n            else if(liked)\r\n            {\r\n                resolve({\r\n                    userId:704,\r\n                    name:'Mahesh',\r\n                    desc:'Mahesh liked successfully'\r\n                })\r\n            }\r\n            else\r\n                reject(\"user not subscribed,watched and liked\")\r\n        })\r\n\r\n        Promise.all([subscriber1,subscriber2])\r\n        .then((result)=>{\r\n            console.log(result)\r\n        })\r\n        .catch((err)=>console.log(err))\r\n    }\r\n\r\n    const subscribers=()=>{\r\n        return new Promise((resolve, reject)=>{\r\n            if(!subscribed)\r\n            {\r\n                resolve({\r\n                    name:'Rohit',\r\n                    desc:'Rohit Not subscribed'\r\n                })\r\n            }\r\n            else\r\n                reject(\"user subscribed\")\r\n        })\r\n    }\r\n\r\n    // Async makes a function to return a promise :)\r\n    const asyncFunc=async()=>{\r\n        console.log(\"First statement\")\r\n\r\n        // Await makes a function to wait for a promise :)\r\n        const result = await subscribers()\r\n        console.log(result)\r\n\r\n        console.log(\"Third statement\")\r\n    }\r\n\r\n    return (\r\n        <div className='text-center'>\r\n            PromisesFunc\r\n            <br/>\r\n            {/* Promises */}\r\n            <button className='btn btn-primary my-4' onClick={()=>start()}>Subscribe</button>\r\n            <br/>\r\n            {/* Async & Await */}\r\n            <button className='btn btn-primary' onClick={()=>asyncFunc()}>asyncFunc</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PromisesFunc"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}