{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactPractise\\\\src\\\\Practise_Hooks\\\\UseReducerHook.js\",\n  _s = $RefreshSig$();\nimport React, { useReducer } from 'react';\n\n// An initialValue might be an object or a value :)\n// const initial=0\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialObj = {\n  sc: 0\n};\nfunction UseReducerHook() {\n  _s();\n  const reducer = (state, action) => {\n    console.log(state);\n    switch (action) {\n      case 50:\n        return {\n          sc: state.sc + 1\n        };\n      case 100:\n        return {\n          sc: state.sc + 1\n        };\n      default:\n        return {\n          state\n        };\n    }\n  };\n\n  // useReducer Hook is used when complex logic is required to track the state of an application :)\n  const [score, dispatch] = useReducer(reducer, initialObj);\n\n  /**\r\n   * 1. score = initial\r\n   * 2. dispatch describes the action that we want to perform\r\n   * 3. reducer function takes (action,intial) in the context of useReducer(reducer,initial)\r\n   * 4. Then reducer function takes (current_value,action)\r\n   * \r\n  */\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center\",\n    children: [\"UseReducerHook \", score.sc, /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: () => dispatch(50),\n      children: \"Increment1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: () => dispatch(100),\n      children: \"Increment2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n_s(UseReducerHook, \"CI6Ycrlz2+FxhuoSX2ayQYU2G2Q=\");\n_c = UseReducerHook;\nexport default UseReducerHook;\nvar _c;\n$RefreshReg$(_c, \"UseReducerHook\");","map":{"version":3,"names":["React","useReducer","jsxDEV","_jsxDEV","initialObj","sc","UseReducerHook","_s","reducer","state","action","console","log","score","dispatch","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/reactPractise/src/Practise_Hooks/UseReducerHook.js"],"sourcesContent":["import React, { useReducer } from 'react'\r\n\r\n// An initialValue might be an object or a value :)\r\n// const initial=0\r\n\r\nconst initialObj={\r\n    sc:0\r\n}\r\n\r\nfunction UseReducerHook() {\r\n\r\n    const reducer=(state,action)=>{\r\n        console.log(state)\r\n        switch(action)\r\n        {\r\n            case 50:  return {sc:state.sc+1}\r\n            case 100:   return {sc:state.sc+1}\r\n            default: return {state}\r\n        }\r\n    }\r\n\r\n    // useReducer Hook is used when complex logic is required to track the state of an application :)\r\n    const [score,dispatch]=useReducer(reducer,initialObj)\r\n\r\n    /**\r\n     * 1. score = initial\r\n     * 2. dispatch describes the action that we want to perform\r\n     * 3. reducer function takes (action,intial) in the context of useReducer(reducer,initial)\r\n     * 4. Then reducer function takes (current_value,action)\r\n     * \r\n    */\r\n    return (\r\n        <div className='text-center'>\r\n            UseReducerHook {score.sc}\r\n            <button className='btn btn-primary' onClick={()=>dispatch(50)}>Increment1</button>\r\n            <button className='btn btn-primary' onClick={()=>dispatch(100)}>Increment2</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UseReducerHook"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;;AAEzC;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,UAAU,GAAC;EACbC,EAAE,EAAC;AACP,CAAC;AAED,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EAEtB,MAAMC,OAAO,GAACA,CAACC,KAAK,EAACC,MAAM,KAAG;IAC1BC,OAAO,CAACC,GAAG,CAACH,KAAK,CAAC;IAClB,QAAOC,MAAM;MAET,KAAK,EAAE;QAAG,OAAO;UAACL,EAAE,EAACI,KAAK,CAACJ,EAAE,GAAC;QAAC,CAAC;MAChC,KAAK,GAAG;QAAI,OAAO;UAACA,EAAE,EAACI,KAAK,CAACJ,EAAE,GAAC;QAAC,CAAC;MAClC;QAAS,OAAO;UAACI;QAAK,CAAC;IAC3B;EACJ,CAAC;;EAED;EACA,MAAM,CAACI,KAAK,EAACC,QAAQ,CAAC,GAACb,UAAU,CAACO,OAAO,EAACJ,UAAU,CAAC;;EAErD;AACJ;AACA;AACA;AACA;AACA;AACA;EACI,oBACID,OAAA;IAAKY,SAAS,EAAC,aAAa;IAAAC,QAAA,GAAC,iBACV,EAACH,KAAK,CAACR,EAAE,eACxBF,OAAA;MAAQY,SAAS,EAAC,iBAAiB;MAACE,OAAO,EAAEA,CAAA,KAAIH,QAAQ,CAAC,EAAE,CAAE;MAAAE,QAAA,EAAC;IAAU;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAClFlB,OAAA;MAAQY,SAAS,EAAC,iBAAiB;MAACE,OAAO,EAAEA,CAAA,KAAIH,QAAQ,CAAC,GAAG,CAAE;MAAAE,QAAA,EAAC;IAAU;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClF,CAAC;AAEd;AAACd,EAAA,CA7BQD,cAAc;AAAAgB,EAAA,GAAdhB,cAAc;AA+BvB,eAAeA,cAAc;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}