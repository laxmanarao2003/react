{"ast":null,"code":"import _classCallCheck from\"D:/ReactPractise/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"D:/ReactPractise/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"D:/ReactPractise/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"D:/ReactPractise/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import React,{Component}from'react';import UnmountingClassComponent from'./UnmountingClassComponent';/**\r\n * Lifecycle of a class component\r\n * 3 phases:-\r\n *  1. Mounting\r\n *  2. Updating\r\n *  3. Unmounting\r\n * \r\n *  1.Mounting =>\r\n *     1. constructor()\r\n *     2. getDerivedStateFromProps()\r\n *     3. render()\r\n *     4. componentDidMount()\r\n * \r\n *  2. Updating =>\r\n *     1. getDerivedStateFromProps()\r\n *     2. shouldComponentUpdate()\r\n *     3.render()\r\n *     4.getSnapshotBeforeUpdate()\r\n *     5.componentDidUpdate()\r\n * \r\n *  3. Unmounting =>\r\n *     componentWillUnmount()\r\n*/import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var LifeCycleOfClassComponent=/*#__PURE__*/function(_Component){_inherits(LifeCycleOfClassComponent,_Component);var _super=_createSuper(LifeCycleOfClassComponent);function LifeCycleOfClassComponent(props){var _this;_classCallCheck(this,LifeCycleOfClassComponent);_this=_super.call(this,props);// getSnapshotBeforeUpdate is used to access the current state before update :)\n_this.getSnapshotBeforeUpdate=function(prevProps,prevState){console.log(prevState.name);return true;};_this.state={name:\"Rohit Sharma\"};console.log(\"Constructor called\");return _this;}// getDerivedStateFromProps will be initiated before render the elements into DOM\n_createClass(LifeCycleOfClassComponent,[{key:\"render\",value:// renders html elements into DOM\nfunction render(){var _this2=this;console.log(\"render\");return/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[\"LifeCycleOfClassComponent \",/*#__PURE__*/_jsx(\"h5\",{children:this.state.name}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary\",onClick:function onClick(){return _this2.setState({name:\"Virat Kohli\"});},children:\"click!\"}),this.state.name===\"Rohit Sharma\"&&/*#__PURE__*/_jsx(UnmountingClassComponent,{})]});}// componentDidMount() is called after execution of all the child components\n},{key:\"componentDidMount\",value:function componentDidMount(){console.log(\"componentDidMount called\");}// Upadating \n// It decides whether a state will be update or not :)\n},{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(){if(this.state.name===\"Rohit Sharma\")return true;return false;}},{key:\"componentDidUpdate\",value:// componentDidUpdate will be called after state gets updated :)\nfunction componentDidUpdate(prevProps,prevState){console.log(this.state.name);}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(props,state){console.log(\"getDerivedStateFromProps\");return true;}}]);return LifeCycleOfClassComponent;}(Component);export default LifeCycleOfClassComponent;","map":{"version":3,"names":["React","Component","UnmountingClassComponent","jsx","_jsx","jsxs","_jsxs","LifeCycleOfClassComponent","_Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","getSnapshotBeforeUpdate","prevProps","prevState","console","log","name","state","_createClass","key","value","render","_this2","className","children","onClick","setState","componentDidMount","shouldComponentUpdate","componentDidUpdate","getDerivedStateFromProps"],"sources":["D:/ReactPractise/src/ClassComponentsPractise/LifeCycleOfClassComponent.js"],"sourcesContent":["import React, { Component } from 'react'\r\nimport UnmountingClassComponent from './UnmountingClassComponent'\r\n\r\n/**\r\n * Lifecycle of a class component\r\n * 3 phases:-\r\n *  1. Mounting\r\n *  2. Updating\r\n *  3. Unmounting\r\n * \r\n *  1.Mounting =>\r\n *     1. constructor()\r\n *     2. getDerivedStateFromProps()\r\n *     3. render()\r\n *     4. componentDidMount()\r\n * \r\n *  2. Updating =>\r\n *     1. getDerivedStateFromProps()\r\n *     2. shouldComponentUpdate()\r\n *     3.render()\r\n *     4.getSnapshotBeforeUpdate()\r\n *     5.componentDidUpdate()\r\n * \r\n *  3. Unmounting =>\r\n *     componentWillUnmount()\r\n*/\r\n\r\nclass LifeCycleOfClassComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            name:\"Rohit Sharma\"\r\n        }\r\n        console.log(\"Constructor called\")\r\n    }\r\n\r\n    // getDerivedStateFromProps will be initiated before render the elements into DOM\r\n    static getDerivedStateFromProps(props, state) {\r\n        console.log(\"getDerivedStateFromProps\")\r\n        return true\r\n    }\r\n\r\n    // renders html elements into DOM\r\n    render() {\r\n        console.log(\"render\");  \r\n        return (\r\n            <div className='text-center'>\r\n                LifeCycleOfClassComponent <h5>{this.state.name}</h5>\r\n                <button className='btn btn-primary' \r\n                    onClick={()=>this.setState({name:\"Virat Kohli\"})}>click!\r\n                </button>\r\n\r\n                {\r\n                    ((this.state.name===\"Rohit Sharma\") && <UnmountingClassComponent/>)\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    // componentDidMount() is called after execution of all the child components\r\n    componentDidMount() { \r\n        console.log(\"componentDidMount called\")\r\n    }\r\n\r\n    // Upadating \r\n\r\n    // It decides whether a state will be update or not :)\r\n    shouldComponentUpdate()\r\n    {\r\n        if(this.state.name===\"Rohit Sharma\")\r\n            return true\r\n        return false\r\n    }\r\n\r\n    // getSnapshotBeforeUpdate is used to access the current state before update :)\r\n    getSnapshotBeforeUpdate = (prevProps, prevState) => {\r\n        console.log(prevState.name)\r\n        return true\r\n    }\r\n\r\n    // componentDidUpdate will be called after state gets updated :)\r\n    componentDidUpdate(prevProps, prevState) {\r\n        console.log(this.state.name);\r\n    }\r\n\r\n}\r\n\r\nexport default LifeCycleOfClassComponent"],"mappings":"wYAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,KAAQ,OAAO,CACxC,MAAO,CAAAC,wBAAwB,KAAM,4BAA4B,CAEjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAtBA,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,4BAwBM,CAAAC,yBAAyB,uBAAAC,UAAA,EAAAC,SAAA,CAAAF,yBAAA,CAAAC,UAAA,MAAAE,MAAA,CAAAC,YAAA,CAAAJ,yBAAA,EAC3B,SAAAA,0BAAYK,KAAK,CAAE,KAAAC,KAAA,CAAAC,eAAA,MAAAP,yBAAA,EACfM,KAAA,CAAAH,MAAA,CAAAK,IAAA,MAAMH,KAAK,EA8Cf;AAAAC,KAAA,CACAG,uBAAuB,CAAG,SAACC,SAAS,CAAEC,SAAS,CAAK,CAChDC,OAAO,CAACC,GAAG,CAACF,SAAS,CAACG,IAAI,CAAC,CAC3B,MAAO,KAAI,CACf,CAAC,CAhDGR,KAAA,CAAKS,KAAK,CAAG,CACTD,IAAI,CAAC,cACT,CAAC,CACDF,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC,QAAAP,KAAA,CACrC,CAEA;AAAAU,YAAA,CAAAhB,yBAAA,GAAAiB,GAAA,UAAAC,KAAA,CAMA;AACA,SAAAC,OAAA,CAAS,KAAAC,MAAA,MACLR,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC,CACrB,mBACId,KAAA,QAAKsB,SAAS,CAAC,aAAa,CAAAC,QAAA,EAAC,4BACC,cAAAzB,IAAA,OAAAyB,QAAA,CAAK,IAAI,CAACP,KAAK,CAACD,IAAI,CAAK,CAAC,cACpDjB,IAAA,WAAQwB,SAAS,CAAC,iBAAiB,CAC/BE,OAAO,CAAE,SAAAA,QAAA,QAAI,CAAAH,MAAI,CAACI,QAAQ,CAAC,CAACV,IAAI,CAAC,aAAa,CAAC,CAAC,EAAC,CAAAQ,QAAA,CAAC,QACtD,CAAQ,CAAC,CAGH,IAAI,CAACP,KAAK,CAACD,IAAI,GAAG,cAAc,eAAKjB,IAAA,CAACF,wBAAwB,GAAC,CAAC,EAErE,CAAC,CAEd,CAEA;AAAA,GAAAsB,GAAA,qBAAAC,KAAA,CACA,SAAAO,kBAAA,CAAoB,CAChBb,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC,CAC3C,CAEA;AAEA;AAAA,GAAAI,GAAA,yBAAAC,KAAA,CACA,SAAAQ,sBAAA,CACA,CACI,GAAG,IAAI,CAACX,KAAK,CAACD,IAAI,GAAG,cAAc,CAC/B,MAAO,KAAI,CACf,MAAO,MAAK,CAChB,CAAC,GAAAG,GAAA,sBAAAC,KAAA,CAQD;AACA,SAAAS,mBAAmBjB,SAAS,CAAEC,SAAS,CAAE,CACrCC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACE,KAAK,CAACD,IAAI,CAAC,CAChC,CAAC,KAAAG,GAAA,4BAAAC,KAAA,CA9CD,SAAAU,yBAAgCvB,KAAK,CAAEU,KAAK,CAAE,CAC1CH,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC,CACvC,MAAO,KAAI,CACf,CAAC,WAAAb,yBAAA,GAdmCN,SAAS,EA6DjD,cAAe,CAAAM,yBAAyB"},"metadata":{},"sourceType":"module","externalDependencies":[]}